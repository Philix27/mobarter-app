// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_credentials.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const kyc_UpdateAddressAndUtilityBill = `-- name: Kyc_UpdateAddressAndUtilityBill :exec
UPDATE kyc_credentials
  SET house_address = $2,
  utility_bill = $3
WHERE user_id = $1
`

type Kyc_UpdateAddressAndUtilityBillParams struct {
	UserID       int32
	HouseAddress pgtype.Text
	UtilityBill  pgtype.Text
}

func (q *Queries) Kyc_UpdateAddressAndUtilityBill(ctx context.Context, arg Kyc_UpdateAddressAndUtilityBillParams) error {
	_, err := q.db.Exec(ctx, kyc_UpdateAddressAndUtilityBill, arg.UserID, arg.HouseAddress, arg.UtilityBill)
	return err
}

const kyc_UpdateBvn = `-- name: Kyc_UpdateBvn :exec
UPDATE kyc_credentials
  SET bvn = $2
WHERE user_id = $1
`

type Kyc_UpdateBvnParams struct {
	UserID int32
	Bvn    pgtype.Text
}

func (q *Queries) Kyc_UpdateBvn(ctx context.Context, arg Kyc_UpdateBvnParams) error {
	_, err := q.db.Exec(ctx, kyc_UpdateBvn, arg.UserID, arg.Bvn)
	return err
}

const kyc_UpdateNin = `-- name: Kyc_UpdateNin :exec
UPDATE kyc_credentials
  SET nin = $2
WHERE user_id = $1
`

type Kyc_UpdateNinParams struct {
	UserID int32
	Nin    pgtype.Text
}

func (q *Queries) Kyc_UpdateNin(ctx context.Context, arg Kyc_UpdateNinParams) error {
	_, err := q.db.Exec(ctx, kyc_UpdateNin, arg.UserID, arg.Nin)
	return err
}
